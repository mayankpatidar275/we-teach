globalThis is a standard built-in object similar to window in the browser but works in all environments, including Node.js.

db.ts:

This setup uses a singleton pattern for the PrismaClient to ensure a single instance is used throughout the application, preventing multiple database connections, which is especially useful during development. The code defines a global variable for Prisma, creates or reuses the PrismaClient instance, and assigns it to the global scope in non-production environments.



If there are so many 400 errors in webhook stripe will reject it so be carefull. route.ts (webhook)



Just Protecting the creation of the chapter, attachments and courses would be enough.
Try out and check and verify.



Bcrypt compare causing the app to crash in docker 
Migrating to bcryptjs worked



# Build the images

docker compose build

# Tag and push the we-teach_we-teach image

docker tag we-teach_we-teach:latest mkpatidar/we-teach:latest
docker push mkpatidar/we-teach:latest

# Tag and push the we-teach_keyboard-drum image

docker tag we-teach_keyboard-drum:latest mkpatidar/keyboard-drum:latest
docker push mkpatidar/keyboard-drum:latest

# Tag and push the we-teach_bubble-game image

docker tag we-teach_bubble-game:latest mkpatidar/bubble-game:latest
docker push mkpatidar/bubble-game:latest

# Tag and push the we-teach_runner-game image

docker tag we-teach_runner-game:latest mkpatidar/runner-game:latest
docker push mkpatidar/runner-game:latest

# Tag and push the we-teach_api-gateway image

docker tag we-teach_api-gateway:latest mkpatidar/api-gateway:latest
docker push mkpatidar/api-gateway:latest





todo: remove border in create/edit course cards

todo: error on api requests, like patch to edit description (changing the userId from "1" worked)

todo: add all the microservices repos code and configurations for docker and nginx

todo: Internal server error while uploading a chapter (uploadthing middleware error)

todo: Error -> hostname "utfs.io" is not configured under images in your `next.config.js`

todo: use SessionProvider at top level

todo: coursesidebar width fix, chapter name lenght truncate if > 15 char, 

todo: inprogress/completed courses not showing correct.

todo: push the images on docker hub and create compose file on gcp vps to pull and run (change nginx config accordingly i.e localhost to domain name or ip)

todo: uploadthing -> My callback runs in development but not in production 

todo: https -> setup the ssl certificate, nginx configuration changes accordingly.

todo: login/logout rendering issue

todo: mux video player issue (only for some resources) (reason could be resource not found on uploadthing)

todo: stripe redirect to localhost:3000 issue

todo: change the favicon

todo: issue in uploading chapter video (image working) -> in production

todo: error onSubmit after video upload -> solution: check if the video already exists on uploadthing (await video.assets.retrieve(existingMuxData.assetId);)

